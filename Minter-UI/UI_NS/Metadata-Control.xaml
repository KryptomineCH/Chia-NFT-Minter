<UserControl x:Class="Minter_UI.UI_NS.Metadata_Control"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Minter_UI.UI_NS" 
             xmlns:cef="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             IsVisibleChanged="UserControl_IsVisibleChanged">
    <UserControl.Resources>
        <!-- Styles -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/TextBoxStyle_Dark.xaml"/>
                <ResourceDictionary Source="Styles/ScrollBarStyle_Dark.xaml"/>
                <ResourceDictionary Source="Styles/CheckBoxStyle_Dark.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>
        <!-- Filters -->
        <local:FilterControl x:Name="Filters" Grid.Row="0" Grid.ColumnSpan="2"></local:FilterControl>
        <!-- Image preview -->
        <cef:ChromiumWebBrowser x:Name="ImageWebView" Grid.Row="1" Background="Transparent"></cef:ChromiumWebBrowser>
        <!-- Import Button -->
        <Button x:Name="ImportMedia_Button" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1"
                Panel.ZIndex="2" Click="ImportMedia_Button_Click" 
                Background="Transparent" BorderBrush="Transparent" Margin="0.5cm,0.5cm">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <StackPanel>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                        <ProgressBar x:Name="ImportProgress_ProgressBar" Visibility="Collapsed"/>
                    </StackPanel>
                </ControlTemplate>
            </Button.Template>
            <!-- Button image -->
            <Image Width="1cm" Height="1cm" Panel.ZIndex="2">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Source" Value="pack://application:,,,/Resources/Import_Icon.png"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="pack://application:,,,/Resources/Import_Icon_mouseover.png"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Button>
        <!-- Metadata -->
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="0" Grid.ColumnSpan="2">
                <!-- Name ahd sensitive content -->
                <Label Content="Name" Foreground="#998826"></Label>
                <TextBox x:Name="NftName_TextBox"></TextBox>
                <CheckBox x:Name="SensitiveContent_Checkbox" Content="Sensitive Content (18+)" Foreground="#998826"></CheckBox>
                <!-- Description -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                </Grid>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Description" Foreground="#998826"></Label>
                    <Button x:Name="UpdateAllDescriptions" Content="Update all Descriptions" 
                    BorderBrush="Black"
                    Click="UpdateAllDescriptionsButton_Click">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                                <Setter Property="Padding" Value="0.1cm"/>
                            </Style>
                        </Button.Resources>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#5d995d"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Green"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="GenerateDescription_Button" Content="Generate" Margin="0.1cm,0,0,0" Visibility="Collapsed"
                    BorderBrush="Black"
                    Click="GenerateDescriptionButton_Click">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                                <Setter Property="Padding" Value="0.1cm"/>
                            </Style>
                        </Button.Resources>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#5d995d"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Green"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="GenerateAllDescriptions_Button" Content="Generate All" Margin="0.1cm,0,0,0" Visibility="Collapsed"
                    BorderBrush="Black"
                    Click="GenerateAllDescriptionsButton_Click">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                                <Setter Property="Padding" Value="0.1cm"/>
                            </Style>
                        </Button.Resources>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#5d995d"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Green"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <TextBox x:Name="Description_TextBox" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible"></TextBox>
                <!-- nft attributes -->
                <WrapPanel x:Name="Attributes_StackPanel" Orientation="Horizontal">
                    <Button x:Name="Attributes_TagTanel_AddButton" Content="+" Background="#5d995d" Click="Attributes_TagTanel_AddButton_Click"></Button>
                </WrapPanel>
            </StackPanel>
            <!-- save button -->
            <Button x:Name="Save_Button" Content="Save" Grid.Row="2" Grid.Column="0"  Click="Save_Button_Click" Margin="0.1cm,0,0,0.1cm">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Button.Resources>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#5d995d"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Green"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <!-- Save and next button -->
            <Button x:Name="SaveAndNext_Button" Content="Save and Next" Grid.Row="2" Grid.Column="1"  Click="SaveAndNext_Button_Click" Margin="0.1cm,0,0,0.1cm">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Button.Resources>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#5d995d"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Green"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <!-- small preview list which can be used to display the next nft -->
        <!-- is beeing filled by the filters -->
        <ListView
                x:Name="NFTselection_ListView"
                SelectionChanged="NFTselection_ListView_SelectionChanged"
                Margin="0,2,0,0"
            Grid.Row="2"
                VirtualizingPanel.CacheLengthUnit="Page"
                VirtualizingPanel.CacheLength="2"
                VirtualizingPanel.ScrollUnit="Item"
                VirtualizingPanel.VirtualizationMode="Recycling"
                ScrollViewer.HorizontalScrollBarVisibility="auto"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                ScrollViewer.CanContentScroll="True"
                ItemsSource="{Binding Items}" 
                Background="#111009"
                BorderBrush="Transparent"
                SelectionMode="Single">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <local:MintingPreview_Control 
                        Data="{Binding Data}" 
                        IsMinting="{Binding IsMinting}"  
                        IsUploading="{Binding IsUploading}" 
                        IsUploaded="{Binding IsUploaded}"
                        Height="2cm"
                        Width="2cm"
                        IsEnabled="False"/>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</UserControl>
